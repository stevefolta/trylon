trylon Compiler

# See "Compiler Compiler" for the guts of this, and an explanation of why it is
# separate from this... (it's Trylon 1's fault, not Trylon 2's).


compile: compile-symbols
	compiler = Compiler new
	compiler compile-program: compile-symbols
	return compiler return-value

compile
	compile: List new


iff targeting-jolt
	compile-file: file as: name into: parent-proto
		if !(parent-proto is-a: ExistingProto)
			parent-proto = ExistingProto new: parent-proto
		compiler = Compiler new
		program = compiler compile-file: file as: name into: parent-proto
		program _eval
	
	compile-dir: dir as: name into: parent-proto
		if !(parent-proto is-a: ExistingProto)
			parent-proto = ExistingProto new: parent-proto
		compiler = Compiler new
		program = compiler compile-dir: dir as: name into: parent-proto
		program _eval
		compiler = nil
	
	parse-file: file as: name into: parent-proto
		if !(parent-proto is-a: ExistingProto)
			parent-proto = ExistingProto new: parent-proto
		if !(file is-a: File)
			file = File new: file
		compiler = Compiler new
		program = compiler compile-file: file as: name into: parent-proto
		return program



# Copyright 2007 Steve Folta.  See the License file.

