trylid ObjectExplorer


explore: object
	explorer = ObjectExplorer new: object
	explorer run


######

fields cur-object num-fields selected-field
fields object-history

create: object
	object-history = List new
	use-object: object


use-object: object
	cur-object = object
	num-fields = (Pepsi SmallInteger value_: cur-object _sizeof) / 4
	selected-field = 0


show-object
	print: (ellipsize: cur-object print-string)
	print: "\r\n"
	print: "--------------------\r\n"
	which-field = 0
	while which-field < num-fields
		show-field: which-field
		print: "\r\n"
		which-field += 1


show-field: which-field
	field-value = cur-object object-ptr object-at: which-field
	if which-field == selected-field
		Standard print: "\e[01m"
	print: (ellipsize: field-value print-string)
	if which-field == selected-field
		Standard print: "\e[0m"


ellipsize: string
	if string length > 72
		string = (string substr: 0 length: 72) + "..."
	return string


field-down
	if selected-field >= num-fields - 1
		return
	selected-field += 1
	# Redraw old selection deselected.
	print: "\r\e[2K"
	show-field: selected-field - 1
	# Draw newly-selected field.
	print: "\e[B\r\e[2K"
	show-field: selected-field

field-up
	if selected-field <= 0
		return
	selected-field -= 1
	# Redraw current field unselected.
	print: "\r\e[2K"
	show-field: selected-field + 1
	# Draw newly-selected field.
	print: "\e[A\r\e[2K"
	show-field: selected-field


enter-field
	if num-fields <= 0
		return
	object-history push-front: cur-object
	switch-to-object: (cur-object object-ptr object-at: selected-field)


back-up
	if object-history is-empty
		return
	switch-to-object: object-history pop-front


switch-to-object: object
	# Clear the old object from the display.
	back-lines = 1
	if num-fields > 0
		back-lines = selected-field + 2
	print: "\e[" + back-lines string + "A\r\e[0J"

	# Go to the new object.
	use-object: object
	show-object
	print: "\e[" + (num-fields - selected-field) string + "A"
	

run
	# Display the object.
	show-object
	print: "\e[" + (num-fields - selected-field) string + "A"

	# Put the input into "raw" (unbuffered) mode.
	saved-termios = Posix Termios new
	saved-termios get: 0
	termios = Posix Termios new
	termios get: 0
	termios cfmakeraw
	termios set: 0

	# Handle commands.
	input = Pepsi ByteArray new: 8
	loop
		Pepsi StdIn read: input size: 1
		c = input at: 0
		switch c
			`q`
				break
			`j`
				field-down
			`k`
				field-up
			`\n`, `\r`
				enter-field
			`\b`, `\e`
				back-up
	
	# Get to the last line.
	lines-down = num-fields - selected-field
	if lines-down > 0
		print: "\r\e[" + lines-down string + "B"

	# Restore terminal settings.
	saved-termios set: 0

	print-line


