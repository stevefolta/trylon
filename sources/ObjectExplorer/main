trylid ObjectExplorer


explore: object
	explorer = ObjectExplorer new: object
	explorer run


######

fields cur-object num-fields selected-field

create: object
	use-object: object


use-object: object
	cur-object = object
	num-fields = (Pepsi SmallInteger value_: cur-object _sizeof) / 4
	selected-field = 0


show-object
	print-line: cur-object print-string
	print-line: "--------------------"
	which-field = 0
	while which-field < num-fields
		show-field: which-field
		print-line
		which-field += 1


show-field: which-field
	field-value = cur-object object-ptr object-at: which-field
	if which-field == selected-field
		Standard print: "\e[01m"
	print: field-value print-string
	if which-field == selected-field
		Standard print: "\e[0m"


field-down
	if selected-field >= num-fields - 1
		return
	selected-field += 1
	# Redraw old selection deselected.
	print: "\r\e[2K"
	show-field: selected-field - 1
	# Draw newly-selected field.
	print: "\e[B\r\e[2K"
	show-field: selected-field

field-up
	if selected-field <= 0
		return
	selected-field -= 1
	# Redraw current field unselected.
	print: "\r\e[2K"
	show-field: selected-field + 1
	# Draw newly-selected field.
	print: "\e[A\r\e[2K"
	show-field: selected-field


enter-field
	# ...
	

run
	# Display the object.
	show-object
	print: "\e[" + (num-fields - selected-field) string + "A"

	# Put the input into "raw" (unbuffered) mode.
	saved-termios = Posix Termios new
	saved-termios get: 0
	termios = Posix Termios new
	termios get: 0
	termios cfmakeraw
	termios set: 0

	# Handle commands.
	input = Pepsi ByteArray new: 8
	loop
		Pepsi StdIn read: input size: 1
		c = input at: 0
		switch c
			`q`
				break
			`j`
				field-down
			`k`
				field-up
			`\n`, `\r`
				enter-field
	
	# Get to the last line.
	lines-down = num-fields - selected-field
	if lines-down > 0
		print: "\r\e[" + lines-down string + "B"

	# Restore terminal settings.
	saved-termios set: 0

	print-line


