     1                                  bits 32
     2                                  
     3                                  ; NOTE: mov dst, src
     4                                  
     5 00000000 90                      nop
     6 00000001 50                      push eax
     7 00000002 8B450C                  mov eax,[ebp+12]
     8 00000005 89450C                  mov [ebp+12], eax
     9 00000008 FF750C                  push dword [ebp+12]
    10 0000000B FF75F4                  push dword [ebp-12]
    11 0000000E FFB500FFFFFF            push dword [ebp-256]
    12 00000014 68452301FF              push 0xFF012345
    13 00000019 B867452301              mov eax, 0x01234567
    14 0000001E FF10                    call [eax]
    15 00000020 FFD0                    call eax
    16 00000022 C9                      leave
    17 00000023 C3                      ret
    18 00000024 31C0                    xor eax, eax
    19 00000026 81C40C000000            add esp, 12
    20 0000002C 83C40C                  add esp, byte 12
    21 0000002F 83F800                  cmp eax, byte 0
    22 00000032 837DF800                cmp dword [ebp-8], byte 0
    23 00000036 8D450C                  lea eax, [ebp+12]
    24                                  
    25 00000039 55                      push ebp
    26 0000003A 89E5                    mov ebp, esp
    27 0000003C 81EC0C000000            sub esp, dword 12
    28                                  
    29 00000042 FFE0                    jmp eax
    30 00000044 FF20                    jmp [eax]
    31 00000046 E909000000              jmp dword foo
    32                                  
    33 0000004B 7407                    	jz foo
    34 0000004D B867452301              	mov eax, 0x01234567
    35 00000052 FFE0                    	jmp eax
    36                                  foo:
    37 00000054 31C0                    	xor eax, eax
    38                                  
    39 00000056 75FC                    jnz foo
    40                                  
    41                                  ; Stupid NASM doesn't accept "jz dword foo1"
    42 00000058 0F8400000000            	jz near foo1
    43                                  foo1:
    44 0000005E 0F8500000000            	jnz near foo2
    45                                  foo2:
    46                                  
    47 00000064 7507                    	jnz was_true
    48 00000066 B867452301              	mov eax, 0x01234567
    49 0000006B EB02                    	jmp short not_complete
    50                                  was_true:
    51 0000006D 31C0                    	xor eax, eax
    52                                  not_complete:
    53                                  
