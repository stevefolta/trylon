# send: "Hello world!"
# send: ("Hello ", "world!")
message = "Hello world!"
send: message

send: ""

# "if" statement.
if Object
	send: "\"if\":  succeeded."
else
	send: "\"if\":  FAILED."
if nil
	send: "Reverse \"if\":  FAILED."
else
	send: "Reverse \"if\":  succeeded."

# "loop", "continue", "break".
index = 0
sum = 0
loop
	index += 1
	if index > 5
		break
	if index == 3
		continue
	sum += index
test: sum against: 12 name: "\"loop\""

# "while".
index = 0
sum = 0
while index < 5
	index += 1
	if index == 3
		continue
	sum += index
test: sum against: 12 name: "\"while\""

# "for"
sum = 0
for value in (1, 10, 100, 1000, 10000, 100000)
	if value == 10000
		break
	if value == 10
		continue
	sum += value
test: sum against: 1101 name: "\"for\""

# "switch"
test-pairs = 	--
	(("bar", 1), ("baz", 1), ("foo", 2), ("blatz", 2), ("grobnitz", 3), ("bleah", 4))
for pair in test-pairs
	result = 0
	switch pair first
		"bar", "baz"
			result = 1
		"foo", "blatz"
			result = 2
		"grobnitz"
			result = 3
		else
			result = 4
	test: result against: pair second name: "switch \"" + pair first + "\""
# No "else" clause.
result = 0
switch "bleah"
	"bar", "baz"
		result = 1
	"foo", "blatz"
		result = 2
	"grobnitz"
		result = 3
test: result against: 0 name: "switch with no \"else\""

# Nil tests.
test-value = nil
ok = nil
if test-value == nil
	ok = True
check: ok name: "Nil test"
test-value = True
ok = nil
if test-value != nil
	ok = True
check: ok name: "Reverse nil test"

# Short circuits.
test: (!True) against: nil name: "!true"
check: (!nil) name: "!false"
test: (false-returner || 3) against: 3 name: "|| (false)"
test: (3 || false-returner) against: 3 name: "|| (true)"
check: (!(false-returner && true-returner)) name: "&& (false, true)"
check: (!(3 && false-returner)) name: "&& (true, false)"
test: (3 && 4) against: 4 name: "&& (true, true)"


