trylon X86Compiler

word-size = 4


compile: function
	# Parsing.
	context = Compiler ExistingProto new: Main
	lines = Compiler LinesLexer read: function body
	parser = Compiler TrylonCodeParser new: lines in: context
	parse-tree = parser parse

	# Function resolution.
	old-compiler = compiler
	compiler = this
	parse-tree prepare-to-emit

	# Codegen.
	method-builder = MethodBuilder new: function code: parse-tree
	result = method-builder emit-method

	compiler = old-compiler
	return result


replace-method: symbol on: object with: code
	# ...
	MethodBuilder

c-fn replace-method: symbol on: object with-ptr: fn-ptr
	struct Standard__Symbol__internal* sym =
		(struct Standard__Symbol__internal*) symbol;
	fn_ptr_* method_ptr = MethodLocation_(object, sym->selector);
	if (method_ptr == nil) {
		UsingMethod_(method_replacement_error_co_)
		Call_(method_replacement_error_co_, this_, symbol);
		}
	*method_ptr = (fn_ptr_) BytePtrValue_(fn_ptr);
	return nil;

method-replacement-error: symbol
	error: "Unable to replace method '" + symbol string + "'."


# As a Compiler.

calling-selector: selector
	# Nothing to do.

build-settings
	if .build-settings == nil
		.build-settings = Compiler BuildSettings new
	return .build-settings
field .build-settings




