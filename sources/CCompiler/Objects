trylon Objects

extend Compiler CompiledProto
	field class-num c-preamble

	c-name
		if .c-name == nil
			.c-name = mangle-name: name
			if parent && !(parent is-main)
				.c-name += "__" + parent c-name
		return .c-name
	field .c-name


	emit-field-indices: stream
		index = 0
		if superclass
			index = superclass emit-field-indices: stream
		
		for field in fields
			stream write: "#define "
			stream write: (mangle-name: field name)
			stream write: "__fld_\t("
			stream write: index string
			index += 1
			stream write-line: ")"
		
		stream write-line

		return index


	setup-dispatch-row: row inherited-function: inherited-function
		# Find the function.
		function = functions at: row name
		if function == nil
			function = inherited-function
		
		# Do this in depth-first order, which is the same order as the class 
		# numbers.  By doing that, we don't need a separate step for sorting 
		# by class number.

		for subclass in subclasses
			subclass setup-dispatch-row: row inherited-function: function
		
		if function
			row append: class-num function: function


	emit-all-function-declarations: stream
		for function in functions values
			stream write: "extern "
			stream write: function c-signature
			stream write-line: ";"
		
		for subclass in subclasses
			subclass emit-all-function-declarations: stream


	total-num-fields
		total = fields count
		if superclass
			total += superclass total-num-fields
		return total


	number-classes: numberer
		# Depth-first.
		for subclass in subclasses
			subclass number-classes: numberer
		
		class-num = numberer next-number
	

	assign-field-indices
		index = 0
		if superclass
			index = superclass total-num-fields
		for field in fields
			field index = index
			index += 1


extend Compiler CompiledField
	field initial-value-result 	# For shared fields.
	field index 	# For instance fields when 'shared-field-accessors' is on.


# Copyright 2007 Steve Folta
# See the License file.

