trylon Functions

extend Compiler TrylidFunction
	emit-c-call: arguments builder: builder
		virtual
	
	emit-c-function-on: stream
		# By default, do nothing.
		# (Not all functions result in object code.)


extend Compiler SetArgumentFunction
	emit-c-call: arguments builder: builder
		mangled-name = mangle-name: name
		value = arguments first-item emit-code: builder
		builder add-line: mangled-name + " = " + value access + ";"
		return value


extend Compiler ThisFunction
	emit-c-call: arguments builder: builder
		return CCompiler NameResult new: "this_"


extend Compiler SharedFieldGetter
	emit-c-call: arguments builder: builder
		builder using-shared-field: field on-proto: on-proto
		return CCompiler LiteralResult new: this
	
	emit-c-function-on: stream
		stream write-all: 	--
			("obj_ ", (mangle-name: name), "__", on-proto c-name, "(obj_ this_)\n")
		stream write: "{\n"
		stream write-all: ("\treturn ", access, ";\n")
		stream write: "}\n"
		stream write-line
		stream write-line
	
	access
		return 	--
			"SharedField_(" + 	--
			(mangle-name: field name) + ", " + on-proto c-name + ")"


extend Compiler SharedFieldSetter
	emit-c-call: arguments builder: builder
		builder using-shared-field: field on-proto: on-proto
		value = arguments first emit-code: builder
		builder add-line: 	--
			"SetSharedField_(" + 	--
			(mangle-name: field name) + ", " + on-proto c-name + ", " + 	--
			value + ");"
		return value
	
	emit-c-function-on: stream
		stream write-all: 	--
			("obj_ ", (mangle-name: name), "__", on-proto c-name, 	--
			 "(obj_ this_, obj_ value)\n")
		stream write: "{\n"
		stream write-all: 	--
			("\tSetSharedField_(", 	--
				(mangle-name: field name), ", ", 	--
				on-proto c-name, ", value);\n")
		stream write: "\treturn value;\n"
		stream write: "}\n"
		stream write-line
		stream write-line
	

