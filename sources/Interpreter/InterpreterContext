trylon InterpreterContext
superclass Compiler Context

fields variables parent


create: parent
	this parent = parent
	variables = Dictionary new


lookup-function: name
	# See if there's a variable for it.
	is-setter = false
	if name ends-with: ":"
		var-name = name substr: 0 length: name length - 1
		if variables contains: var-name
			return VariableSetter new: var-name in: variables
	else if variables contains: name
		return VariableGetter new: name in: variables
	
	# Otherwise, go up the chain.
	return parent lookup-function: name


lookup-function-autodeclaring: name
	function  = lookup-function: name
	if function
		return function
	
	# If it wasn't found, and it's a setter, autodeclare a local.
	if name ends-with: ":"
		var-name = name substr: 0 length: name length - 1
		variables at: var-name put: nil
		return VariableSetter new: var-name in: variables
	
	return nil


