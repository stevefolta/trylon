trylon WordsLexer


create: string
	p = string start
	stopper = string stopper

next
	if cached-word
		result = cached-word
		cached-word = nil
		return result
	else
		return parse-next-word

current
	if cached-word == nil
		cached-word = parse-next-word
	return cached-word

peek
	current


# ===== As a Trylon Iterator

current-item
	return current

is-done
	return (current == nil)

go-forward
	next


# ===== Private

field cached-word
fields p stopper

parse-next-word
	# Skip initial whitespace.
	c = nil
	loop
		if p >= stopper
			return nil
		c = p deref-char
		if !c is-whitespace
			break
		p += 1
	
	word-start = p

	# Is it a paren/bracket/brace?
	if c == `(` || c == `)` || c == `[` || c == `]` || c == `{` || c == `}`
		p += 1
		return String from: word-start to: p
	
	# A string/symbol?
	else if c == `"` || c == `'`
		delimiter = c
		loop
			p += 1
			if p >= stopper
				throw MessageException new: "Unterminated quote."
			c = p deref-char
			if c == delimiter
				p += 1
				return String from: word-start to: p
			else if c == `\\`
				p += 2
				#... *** Escape character.

	# Gather the word.
	loop
		p += 1
		if p >= stopper
			return String from: word-start to: stopper
		c = p deref-char
		if c is-whitespace || 	--
		   c == `(` || c == `)` || c == `[` || c == `]` || c == `{` || c == `}`
			break
	return String from: word-start to: p




