trylon-package Main

pre-declared = nil
string-field = "Hello"
symbol-field = 'checkity-test'
int-field = 7
float-field = 3.14
character-field = `x`
true-field = true
false-field = false
nil-field = nil
typed-global (Int) = 5
dict-field =
	x = 20
	y = 30
	sub-dict =
		value = "hello"
		long-value = "
			Test.
	tuple = ( "a", "b", "c" )


main: args
	try
		tests
	catch Exception
		print-line
		print-line: exception message


test: succeeded title: title
	if succeeded
		print-line: title + ":  succeeded."
	else
		throw MessageException new: "*** " + title + " test failed. ***"

check: value against: expected-value title: title
	if value == expected-value
		print-line: title + ":  succeeded."
	else
		throw MessageException new: "*** " + title + " test failed. ***"


extend Int
	incremented
		return this + 1


tests
	# 2005.5.5?:  Autodeclarations.
	x = 3
	check: x against: 3 title: "Autodeclaration of local"
	if true
		pre-declared = true
	test: pre-declared title: "Autodeclaration doesn't hide global"
	check: string-field against: "Hello" title: "String field value"
	check: symbol-field against: 'checkity-test' title: "Symbol field value"
	check: int-field against: 7 title: "Int field value"
	check: float-field against: 3.14 title: "Float field value"
	check: character-field against: `x` title: "Character field value"
	check: true-field against: true title: "True field value"
	check: false-field against: false title: "False field value"
	test: nil-field == nil title: "Nil field value"
	print-line

	# 2006.1.21: "(type)" for type declarations.
	y (Int) = 3
	check: y against: 3 title: "(Type)"
	check: typed-global against: 5 title: "(Type) in global"
	print-line

	# 2006.3.5: "switch" statement.
	switch y
		1
			test: false title: "Switch statement (Int)"
		2
			test: false title: "Switch statement (Int)"
		3
			test: true title: "Switch statement (Int)"
	switch symbol-field 
		'foo'
			test: false title: "Switch statement (Symbol)"
		'bar'
			test: false title: "Switch statement (Symbol)"
		'checkity-test'
			test: true title: "Switch statement (Symbol)"
	switch symbol-field
		'foo'
			test: false title: "Switch statement (else)"
		else
			test: true title: "Switch statement (else)"
	switch "foo"
		"foo", "bar"	# Comment here...
			test: true title: "Switch statement (multiple values)"
		else
			test: true title: "Switch statement (multiple values)"
	print-line
	
	# 2006.3.19: Dictionary literals.
	dict =
		foo = "Foo value"
		bar = "Bar value"
	check: (dict at: "foo") against: "Foo value" title: "Dict literal"
	check: (dict at: "bar") against: "Bar value" title: "Dict literal"
	check: (dict-field at: "x") against: 20 title: "Package dict literal"
	check: (dict-field at: "y") against: 30 title: "Package dict literal"
	check: ((dict-field at: "sub-dict") at: "value") against: "hello" 	--
		title: "Nested package dict literal"
	check: ((dict-field at: "tuple") at: 0) against: "a" 	--
		title: "Tuple in package dict literal"
	check: ((dict-field at: "sub-dict") at: "long-value") against: "Test.\n" 	--
		title: "Text literal in package dict literal"
	print-line
	
	# 2007.1.27: Dots in identifiers.
	.foo = "dot foo"
	check: .foo against: "dot foo" title: "Dots in identifiers"
	foo.bar = "foo dot bar"
	check: foo.bar against: "foo dot bar" title: "Dots in identifiers"
	print-line

	# 2007.1.27: Text literals.
	text = "
		This is a text literal.
		This is line 2.
		This is line 3.
	print: text
	text = "Initial line.
		Blocked line.
	print: text
	print-line

	# 2007.2.25: Extensions.
	check: 7 incremented against: 8 title: "Class extension"


blegh: index (Int)
	return index


class Foo
	fields index (Int)


