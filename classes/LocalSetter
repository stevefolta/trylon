Class: LocalSetter
Superclass: TrylonFunction


local: CompiledField;


create(local: CompiledField)
{
	this.local = local;
}


emit-call(arguments: (List of ExpressionResult), builder: MethodBuilder)
	: ExpressionResult
{
	access: String = builder.mangle-name(local.name);
	if (local.captured-index > 0)
		access = "vars_->" + access;
	line: String = access + " = " + arguments.first-item.access + ";";
	builder.add-line(line);
	return new NameResult("NULL");
}


used-by-lambda(block: Block)
{
	method-context: MethodContext = block.enclosing-method-context;
	method-context.capture-variable(local);
}


