Class: SymbolLiteral
Superclass: Expression


name: String;


create(name: String)
{
	this.name = name;
}


prepare-to-emit()
{
	// Nothing to do.
}


emit-code(builder: MethodBuilder): ExpressionResult
{
	mangled-name: String = MethodBuilder.mangle-name(name);
	builder.add-extern-declaration("UsingSym_(" + mangled-name + ")");
	return new NameResult("Sym_(" + mangled-name + ")");
}


emit-package-literal(stream: OutputStream): ExpressionResult
{
	mangled-name: String = MethodBuilder.mangle-name(name);

	stream.write("UsingSym_(");
	stream.write(mangled-name);
	stream.write(")");
	stream.write-line();

	return new NameResult("Sym_(" + mangled-name + ")");
}


