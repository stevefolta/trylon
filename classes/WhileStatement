Class: WhileStatement
Superclass: Statement

condition: Expression;
body: Block;


create(condition: Expression, body: Block, comment: String)
{
	this.condition = condition;
	this.body = body;
	this.comment = comment;
}


prepare-to-emit()
{
	condition.prepare-to-emit();
	body.prepare-to-emit();
}


emit-code(builder: MethodBuilder)
{
	builder.add-line(add-comment("while (1) {"));
	builder.add-line("_StartContinueCatcher_");
	saved-temp-num: Int = builder.next-temporary-num;
	result: ExpressionResult = condition.emit-code(builder);
	builder.add-line("if (!Test_(" + result.access + "))");
	builder.add-line("\t_Break_");
	builder.next-temporary-num = saved-temp-num;
	body.emit-code(builder);
	builder.add-line("_EndContinueCatcher_");
	builder.add-line("}");
}


