Class: IfStatement
Superclass: Statement

condition: Expression;
body: Block;
else-block: Block;
else-comment: String;
pre-else-comments: List of Statement;


create(condition: Expression, body: Block, else-block: Block,
       comment: String, else-comment: String,
       pre-else-comments: List of Statement)
{
	this.condition = condition;
	this.body = body;
	this.else-block = else-block;
	this.comment = comment;
	this.else-comment = else-comment;
	this.pre-else-comments = pre-else-comments;
}


prepare-to-emit()
{
	condition.prepare-to-emit();
	body.prepare-to-emit();
	if (else-block)
		else-block.prepare-to-emit();
}


emit-code(builder: MethodBuilder)
{
	saved-temp-num: Int = builder.next-temporary-num;
	result: ExpressionResult = condition.emit-code(builder);
	builder.add-line(add-comment("if (Test_(" + result.access + "))"));
	builder.next-temporary-num = saved-temp-num;
	body.emit-code(builder);
	if (pre-else-comments) {
		for (statement: Statement in pre-else-comments)
			statement.emit-code(builder);
		}
	if (else-block) {
		builder.add-line(add-comment("else", else-comment));
		else-block.emit-code(builder);
		}
}


