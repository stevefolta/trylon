Class: FieldGetter
Superclass: TrylonFunction


field: CompiledField;
on-package: Package;


create(field: CompiledField, on-package: Package)
{
	this.field = field;
	this.on-package = on-package;
}


emit-call(arguments: (List of ExpressionResult), builder: MethodBuilder)
	: ExpressionResult
{
	builder.using-field(field, on-package);
	return new FieldGetResult(field, on-package);
}


emit-code(stream: OutputStream)
{
	if (field.is-primitive)
		return;

	// Just emit the declaration.
	stream.write("obj_ ");
	stream.write(c-name);
	stream.write-line(";");
	stream.write-line();
}


c-name: String
{
	return MethodBuilder.mangle-name(field.name) + "__" + on-package.c-name;
}


