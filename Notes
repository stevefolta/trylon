Field Codegen Bug
	[2007.8.31]

	trylon main

	fields my-field

Classes can see "my-field" (which is correct), but the codegen is a field access, when it should be a send to the "Main" proto.  "emit-c-call:builder:" methods of FieldGetter and FieldSetter need to be fixed.  [Fixed 2007.9.1]

To optimize field access, "MethodContext lookup-function:" would need to explicitly check fields before checking for function calls on "this".  But that's not semantically safe, as a subclass could override the getter and/or setter.


=====

New Parser Bug
	[2007.10.19]

Current crash is due to a problem with precedence.  Need to separate assignments from other binops:

	foo = quux bar: baz

currently parses as:

	(foo = quux) bar: baz

The old parser doesn't have that problem, but at the expense of not being clean about its syntax.  It ought to be fixed before the Trylon 2 release (assuming we don't switch to the new parser).

New precedence:

	,
	=, +=, etc.
	||
	&&
	!
	keyword:
	|
	^
	&
	==, !=
	<, >, <=, >=
	<<, >>
	+, -
	*, /, %
	unary+, unary-, ~ 	[Used to have !.]
	unary send
	primary

Tests:

	foo: bar && !bar: baz
	foo: x | 0x03


=====

To Do
	[live]

Lambdas.
Field access optimization.  Strictly optional, since even in constructors we can't be sure we aren't dealing with a subclass that overrides the getter and/or setter.  But it might be a helpful optimization for those who know what they're doing.


