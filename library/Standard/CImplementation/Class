trylon Class


c-preamble
	#define classInfo ((struct ClassInfo*) this_)

c-fn num-slots
	return BuildInt_(classInfo->numSlots);
c-fn class-num
	return BuildInt_(classInfo->classNum);

c-fn proto
	return classInfo->proto;
c-fn parent-context
	return classInfo->parentContext;
c-fn superclass
	return classInfo->superclass;
c-fn used-contexts
	return classInfo->usedContexts;
c-fn name
	return classInfo->name;
c-fn added-fields
	return classInfo->addedFields;
c-fn subprotos
	return classInfo->subprotos;


iff support-new-methods
	c-fn new-methods
		return classInfo->newMethods;
	c-fn new-methods: dict
		return classInfo->newMethods = dict;

	add-new-method: name machine-code: code
		name = name intern
		if new-methods = nil
			new-methods = Dictionary new
		new-methods[name] = code


