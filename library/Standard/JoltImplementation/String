trylon String

extend Standard String
	new_: jolt-string
		coke
			(let ((stopper (+ jolt-string (strlen jolt-string))))
				[self new: (byte-ptr jolt-string) to: (byte-ptr stopper)])

	new-copy_: c-string
		coke
			(let ((size (+ (strlen c-string) 1))
						(str [[(trylon-proto Standard BytePtr) new-non-pointer:
									 (trylon-int size)] _ptr]))
				(memcpy str c-string size)
				[self new_: str]
				)

	int
		coke
			(trylon-int (strtol [self _stringValue] 0 0))
	float
		coke
			[Float fromString: self]


	# ===== Interoperability with Pepsi strings

	_bytes
		return start _ptr

	_stringValue
		coke
			(let ((start [[self start] _ptr])
						(size (- [[self stopper] _ptr] start))
						(c-string (GC_malloc_atomic (+ size 1))))
				(memcpy c-string start size)
				(set-char@ (+ c-string size) 0)
				c-string
				)

	asSymbol
		coke
			[Symbol intern: self]


